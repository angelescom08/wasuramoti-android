package karuta.hpnpwd.wasuramoti

import _root_.android.text.TextUtils
import _root_.java.util.regex.PatternSyntaxException
import scala.collection.mutable

object AllFuda{
  val list:Array[String] = Array(
    "あきの","はるす","あし","たご","おく",
    "かさ","あまの","わがい","はなの","これ",
    "わたのはらや","あまつ","つく","みち","きみがためは",
    "たち","ちは","す","なにわが","わび",
    "いまこ","ふ","つき","この","なにし",
    "おぐ","みかの","やまざ","こころあ","ありあ",
    "あさぼらけあ","やまが","ひさ","たれ","ひとは",
    "なつ","しら","わすら","あさじ","しの",
    "こい","ちぎりき","あい","おおこ","あわれ",
    "ゆら","やえ","かぜを","みかき","きみがためお",
    "かく","あけ","なげき","わすれ","たき",
    "あらざ","め","ありま","やす","おおえ",
    "いに","よを","いまは","あさぼらけう","うら",
    "もろ","はるの","こころに","あらし","さ",
    "ゆう","おと","たか","うか","ちぎりお",
    "わたのはらこ","せ","あわじ","あきか","ながか",
    "ほ","おも","よのなかよ","ながら","よも",
    "なげけ","む","なにわえ","たま","みせ",
    "きり","わがそ","よのなかは","みよ","おおけ",
    "はなさ","こぬ","かぜそ","ひとも","もも")

  val list_full:Array[String] = Array(
    "秋の田の かりほの庵の 苫をあらみ わが衣手は 露にぬれつつ",
    "春すぎて 夏来にけらし 白妙の 衣ほすてふ 天の香具山",
    "あしびきの 山鳥の尾の しだり尾の ながながし夜を ひとりかも寝む",
    "田子の浦に うち出でてみれば 白妙の 富士のたかねに 雪は降りつつ",
    "奥山に 紅葉踏み分け 鳴く鹿の 声聞くときぞ 秋は悲しき",
    "鵲の 渡せる橋に 置く霜の 白きを見れば 夜ぞふけにける",
    "天の原 ふりさけ見れば 春日なる 三笠の山に 出でし月かも",
    "わが庵は 都のたつみ しかぞすむ 世をうぢ山と 人はいふなり",
    "花の色は 移りにけりな いたづらに 我身世にふる ながめせしまに",
    "これやこの 行くも帰るも 別れては 知るも知らぬも あふ坂の関",
    "和田の原 八十島かけて 漕き出でぬと 人には告げよ あまのつりぶね",
    "天つ風 雲のかよひ路 吹きとぢよ 乙女の姿 しばしとどめむ",
    "筑波嶺の みねより落つる みなの川 恋ぞつもりて 淵となりぬる",
    "陸奥の しのぶもぢずり 誰ゆゑに 乱れそめにし 我ならなくに",
    "君がため 春の野にいでて 若菜摘む わが衣手に 雪は降りつつ",
    "立ち別れ いなばの山の 峰に生ふる まつとし聞かば 今帰り来む",
    "ちはやぶる 神代もきかず 竜田川 からくれなゐに 水くくるとは",
    "住の江の 岸に寄る波 よるさへや 夢のかよひ路 人目よくらむ",
    "難波潟 短かき蘆の 節の間も 逢はでこの世を 過ぐしてよとや",
    "わびぬれば 今はた同じ 難波なる 身をつくしても 逢はむとぞ思ふ",
    "今来むと いひしばかりに 長月の 有明の月を 待ち出でつるかな",
    "吹くからに 秋の草木の しをるれば むべ山風を あらしといふらむ",
    "月見れば ちぢに物こそ 悲しけれ わが身ひとつの 秋にはあらねど",
    "このたびは ぬさもとりあへず 手向山 紅葉のにしき 神のまにまに",
    "名にし負はば 逢坂山の さねかづら 人に知られで くるよしもがな",
    "小倉山 峰の紅葉ば 心あらば 今ひとたびの みゆき待たなむ",
    "みかの原 わきて流るる いづみ川 いつ見きとてか 恋しかるらむ",
    "山里は 冬ぞさびしさ まさりける 人目も草も かれぬと思へば",
    "心あてに 折らばや折らむ 初霜の 置きまどはせる 白菊の花",
    "有明の つれなく見えし 別れより 暁ばかり 憂きものはなし",
    "朝ぼらけ 有明の月と 見るまでに 吉野の里に 降れる白雪",
    "山川に 風のかけたる しがらみは 流れもあへぬ 紅葉なりけり",
    "久方の 光のどけき 春の日に しづ心なく 花の散るらむ",
    "誰をかも 知る人にせむ 高砂の 松も昔の 友ならなくに",
    "人はいさ 心も知らず ふるさとは 花ぞ昔の 香ににほひける",
    "夏の夜は まだ宵ながら 明けぬるを 雲のいづこに 月宿るらむ",
    "白露に 風の吹きしく 秋の野は つらぬきとめぬ 玉ぞ散りける",
    "忘らるる 身をば思はず 誓ひてし 人の命の 惜しくもあるかな",
    "浅茅生の 小野の篠原 しのぶれど あまりてなどか 人の恋しき",
    "忍ぶれど 色に出でにけり わが恋は 物や思ふと 人の問ふまで",
    "恋すてふ わが名はまだき 立ちにけり 人知れずこそ 思ひそめしか",
    "契りきな かたみに袖を しぼりつつ 末の松山 波こさじとは",
    "逢ひ見ての 後の心に くらぶれば 昔は物を 思はざりけり",
    "逢ふことの 絶えてしなくば なかなかに 人をも身をも 恨みざらまし",
    "哀れとも いふべき人は 思ほえで 身のいたづらに なりぬべきかな",
    "由良の門を 渡る舟人 かぢを絶え ゆくへも知らぬ 恋の道かな",
    "八重むぐら しげれる宿の さびしきに 人こそ見えね 秋は来にけり",
    "風をいたみ 岩うつ波の おのれのみ くだけて物を 思ふころかな",
    "みかきもり 衛士のたく火の 夜はもえ 昼は消えつつ 物をこそ思へ",
    "君がため 惜しからざりし 命さへ 長くもがなと 思ひけるかな",
    "かくとだに えやはいぶきの さしも草 さしもしらじな 燃ゆる思ひを",
    "明けぬれば 暮るるものとは 知りながら なほ恨めしき 朝ぼらけかな",
    "嘆きつつ ひとりぬる夜の 明くる間は いかに久しき 物とかは知る",
    "忘れじの 行末までは かたければ けふをかぎりの 命ともがな",
    "滝の音は 絶えて久しく なりぬれど 名こそ流れて なほ聞こえけれ",
    "あらざらむ この世のほかの 思ひ出に 今ひとたびの あふこともがな",
    "めぐり逢ひて 見しやそれとも わかぬ間に 雲がくれにし 夜半の月かな",
    "有馬山 ゐなの篠原 風吹けば いでそよ人を 忘れやはする",
    "やすらはで 寝なましものを 小夜ふけて 傾ぶくまでの 月を見しかな",
    "大江山 いく野の道の 遠ければ まだふみも見ず 天の橋立",
    "いにしへの 奈良の都の 八重ざくら けふ九重に にほひぬるかな",
    "夜をこめて 鳥のそら音は はかるとも よに逢坂の 関はゆるさじ",
    "今はただ 思ひ絶えなむ とばかりを 人づてならで 言ふよしもがな",
    "朝ぼらけ 宇治の川霧 たえだえに あらはれわたる 瀬のあじろ木",
    "恨みわび ほさぬ袖だに あるものを 恋に朽ちなむ 名こそ惜しけれ",
    "もろともに あはれと思へ 山桜 花よりほかに 知る人もなし",
    "春の夜の 夢ばかりなる 手枕に かひなく立たむ 名こそ惜しけれ",
    "心にも あらでうき世に ながらへば 恋しかるべき 夜半の月かな",
    "嵐吹く 三室の山の 紅葉葉は 竜田の川の にしきなりけり",
    "さびしさに 宿を立ち出でて ながむれば いづこもおなじ 秋の夕暮れ",
    "夕されば 門田の稲葉 おとづれて 蘆のまろ屋に 秋風ぞ吹く",
    "音に聞く たかしの浜の あだ波は かけじや袖の ぬれもこそすれ",
    "高砂の 尾上の桜 咲きにけり 外山の霞 立たずもあらなむ",
    "憂かりける 人を初瀬の 山おろしよ はげしかれとは 祈らぬものを",
    "契りおきし させもが露を 命にて あはれ今年の 秋もいぬめり",
    "和田の原 漕ぎ出でてみれば 久方の 雲居にまがふ 沖つ白波",
    "瀬を早み 岩にせかるる 滝川の われても末に 逢はむとぞ思ふ",
    "淡路島 かよふ千鳥の なく声に いく夜ねざめぬ 須磨の関守",
    "秋風に たなびく雲の 絶え間より もれ出づる月の 影のさやけさ",
    "長からむ 心もしらず 黒髪の 乱れて今朝は 物をこそ思へ",
    "ほととぎす 鳴きつる方を ながむれば ただ有明の 月ぞ残れる",
    "思ひわび さても命は あるものを 憂きにたへぬは 涙なりけり",
    "世の中よ 道こそなけれ 思ひ入る 山の奥にも 鹿ぞ鳴くなる",
    "永らへば またこのごろや しのばれむ 憂しと見し世ぞ 今は恋しき",
    "夜もすがら 物思ふころは 明けやらで 閨のひまさへ つれなかりけり",
    "嘆けとて 月やは物を 思はする かこち顔なる わが涙かな",
    "村雨の 露もまだひぬ まきの葉に 霧たちのぼる 秋の夕暮れ",
    "難波江の 蘆のかり寝の ひと夜ゆゑ みをつくしてや 恋ひわたるべき",
    "玉の緒よ 絶えなば絶えね ながらへば 忍ぶることの 弱りもぞする",
    "見せばやな 雄島のあまの 袖だにも ぬれにぞぬれし 色はかはらず",
    "きりぎりす 鳴くや霜夜の さむしろに 衣かたしき ひとりかも寝む",
    "わが袖は 潮干に見えぬ 沖の石の 人こそしらね かわく間もなし",
    "世の中は つねにもがもな 渚漕ぐ あまの小舟の 綱手かなしも",
    "み吉野の 山の秋風 小夜ふけて ふるさと寒く 衣うつなり",
    "おほけなく うき世の民に おほふかな わがたつ杣に 墨染の袖",
    "花さそふ あらしの庭の 雪ならで ふりゆくものは わが身なりけり",
    "来ぬ人を まつほの浦の 夕なぎに 焼くや藻塩の 身もこがれつつ",
    "風そよぐ ならの小川の 夕暮れは みそぎぞ夏の しるしなりける",
    "人もをし 人もうらめし あぢきなく 世を思ふゆゑに 物思ふ身は",
    "ももしきや 古き軒端の しのぶにも なほあまりある 昔なりけり")

  val author = Array(
    "天智天皇","持統天皇","柿本人麻呂","山辺赤人","猿丸大夫",
    "中納言家持","安倍仲麿","喜撰法師","小野小町","蝉丸",
    "参議篁","僧正遍昭","陽成院","河原左大臣","光孝天皇",
    "中納言行平","在原業平朝臣","藤原敏行朝臣","伊勢","元良親王",
    "素性法師","文屋康秀","大江千里","菅家","三条右大臣",
    "貞信公","中納言兼輔","源宗于朝臣","凡河内躬恒","壬生忠岑",
    "坂上是則","春道列樹","紀友則","藤原興風","紀貫之",
    "清原深養父","文屋朝康","右近","参議等","平兼盛",
    "壬生忠見","清原元輔","権中納言敦忠","中納言朝忠","謙徳公",
    "曾禰好忠","恵慶法師","源重之","大中臣能宣朝臣","藤原義孝",
    "藤原実方朝臣","藤原道信朝臣","右大将道綱母","儀同三司母","大納言公任",
    "和泉式部","紫式部","大弐三位","赤染衛門","小式部内侍",
    "伊勢大輔","清少納言","左京大夫道雅","権中納言定頼","相模",
    "前大僧正行尊","周防内侍","三条院","能因法師","良暹法師",
    "大納言経信","祐子内親王家紀伊","前権中納言匡房","源俊頼朝臣","藤原基俊",
    "法性寺入道前関白太政大臣","崇徳院","源兼昌","左京大夫顕輔","待賢門院堀河",
    "後徳大寺左大臣","道因法師","皇太后宮大夫俊成","藤原清輔朝臣","俊恵法師",
    "西行法師","寂蓮法師","皇嘉門院別当","式子内親王","殷富門院大輔",
    "後京極摂政前太政大臣","二条院讃岐","鎌倉右大臣","参議雅経","前大僧正慈円",
    "入道前太政大臣","権中納言定家","従二位家隆","後鳥羽院","順徳院")

  val goshoku =List((R.string.fudaset_five_color_blue,List(3,5,6,12,14,24,30,31,50,57,61,62,69,70,74,75,76,82,91,100)),
                    (R.string.fudaset_five_color_pink,List(1,4,13,16,22,28,34,40,48,51,58,65,66,72,73,80,83,84,86,97)),
                    (R.string.fudaset_five_color_yellow,List(2,7,10,18,32,33,37,39,46,47,55,60,78,79,81,85,87,89,94,96)),
                    (R.string.fudaset_five_color_green,List(8,9,11,15,17,20,23,26,29,35,36,38,41,42,54,59,68,71,92,93)),
                    (R.string.fudaset_five_color_orange,List(19,21,25,27,43,44,45,49,52,53,56,63,64,67,77,88,90,95,98,99)))

  val musumefusahoseAll : String = "むすめふさほせうつしもゆいちひきはやよかみたこおわなあ"

  def compareMusumefusahose(x:String,y:String):Boolean = {
    val x1 = musumefusahoseAll.indexOf(x(0))
    val y1 = musumefusahoseAll.indexOf(y(0))
    if( x1 == y1 ){
      return x.compare(y) < 0
    }else{
      return x1.compare(y1) < 0
    }
  }
  def getFudaNum(s:String):Int = {
    val r = list.indexOf(s)
    if( r < 0){
      return -1
    }else{
      return r+1
    }
  }
  def makeKimarijiSetFromNumList(num_list:List[Int]):Option[(String,Int)] = {
    makeKimarijiSet(num_list.map(i => AllFuda.list(i-1)))
  }
  def makeKimarijiSet(str_list:List[String]):Option[(String,Int)] = {
    val trie = CreateTrie.makeTrie(AllFuda.list)
    var st = mutable.Set[String]()
    for( m <- str_list ){
      st ++= trie.traversePrefix(m)
    }
    if(st.isEmpty){
      None
    }else{
      val excl = AllFuda.list.toSet -- st
      val kimari = trie.traverseWithout(excl.toSeq).toList
        .sortWith(AllFuda.compareMusumefusahose).mkString(" ")
      Some((kimari,st.size))
    }
  }
  def makeHaveToRead(str:String):Set[String] = {
    var ret = mutable.Set[String]()
    if(TextUtils.isEmpty(str)){
      return ret.toSet
    }
    val trie = CreateTrie.makeTrie(AllFuda.list)
    for( s <- str.split(" ") ){
      ret ++= trie.traversePrefix(s).toSet
    }
    return ret.toSet
  }

  def replaceFudaNumPattern(str:String):String = {
    val PATTERN_FUDANUM = """[0-9?*\[\]]+""".r
    val buf = Romanization.zenkaku_to_hankaku(str) 
    val patterns = PATTERN_FUDANUM.findAllIn(buf).flatMap({
        s => try{
          Some(s.replaceAllLiterally("?","\\d").replaceAllLiterally("*","\\d*").r)
        }catch{
          case e:PatternSyntaxException => None
        }
    }).toList
    val r = new StringBuilder(PATTERN_FUDANUM.replaceAllIn(buf,""))
    for( i <- 0 until list.length){
      val s = (i+1).toString
      if(patterns.exists(_.pattern.matcher(s).matches)){
        r.append(" " + list(i))
      }
    }
    r.toString
  }
}
