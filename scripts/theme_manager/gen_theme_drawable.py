#!/usr/bin/env python3
# Android API < 21 does not support style attributes in drawable
# https://stackoverflow.com/questions/8041537/how-to-reference-style-attributes-from-a-drawable/13471695#13471695
# This script creates drawable for each theme

from subprocess import check_output
from pathlib import Path
import xml.etree.ElementTree as ET
import yaml

ROOT_DIR = str(check_output("git rev-parse --show-toplevel", shell=True), 'utf-8').rstrip()
DRAWABLE_DIR = 'src/main/res/drawable'

def aggregateStyles():
  styles = {}
  for fn in Path('./theme/').glob('*.yml'):
    with open(fn) as f:
      style = yaml.load(f)
      styles[style['key']] = style['colors']
  return styles

def replaceAttr(table, tree):
  replaced = False
  for item in tree:
    for k, v in item.attrib.items():
      if v.startswith('?attr/'):
        attr = v[len('?attr/'):]
        newv = table[attr]
        item.set(k, newv)
        replaced = True
    if replaceAttr(table, item):
      replaced = True
  return replaced

def main():
  styles = aggregateStyles()
  path = Path(ROOT_DIR, DRAWABLE_DIR)
  for fn in path.glob('*.xml'):
    if any(fn.name.endswith('_theme_' + theme + '.xml') for theme in styles):
      continue
    for theme, table in styles.items():
      postfix = '_theme_' + theme + '.xml'
      tree = ET.parse(fn)
      if not replaceAttr(table, tree.getroot()):
        continue
      outfile = fn.with_name(fn.stem + postfix)
      with open(outfile, 'wb') as fout:
        header = '<!-- generated by {} from {} -->\n'.format(Path(__file__).name, fn.name)
        fout.write(bytes(header, 'utf-8'))
        tree.write(fout)


if __name__ == '__main__':
  main()
